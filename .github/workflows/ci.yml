name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build -t medi .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Deploy Docker container
        run: |
          echo "Deploying Docker container..."
          docker stop pclass-zaman1 || true
          docker rm pclass-zaman1 || true
          docker run -d --name pclass-zaman1 -p 8080:8080 medi

  test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install curl
        run: |
          sudo apt-get update
          sudo apt-get install -y curl

      - name: Test if the server is up
        run: |
          echo "Testing if the server is up..."
          sleep 10
          if [ $(curl -s -o /dev/null -w "%{http_code}" http://103.151.111.182:8080) -ne 200 ]; then
            echo "Server is not up"
            exit 1
          else
            echo "Server is up"
          fi
